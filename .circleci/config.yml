version: 2
jobs:
  install:
    docker:
    - image: circleci/node:10.16.3
    steps:
    - checkout
    - restore_cache:
        keys:
        - npm-dependencies-{{ checksum "package-lock.json" }}
        - npm-dependencies-
    - run:
        name: Install npm packages
        command: npm i
    - save_cache:
        key: npm-dependencies-{{ checksum "package-lock.json" }}
        paths:
        - ./node_modules
  test:
    docker:
    - image: circleci/node:10.16.3
    - image: circleci/postgres:9.6-alpine-ram
      environment:
        POSTGRES_USER: circleci
        POSTGRES_DB: nachonight
    steps:
    - checkout
    - restore_cache:
        keys:
        - npm-dependencies-{{ checksum "package-lock.json" }}
        - npm-dependencies-
    - run:
        name: Copy test configuration
        command: cp .circleci/.env.cci .env
    - run:
        name: Install dockerize
        command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
        environment:
          DOCKERIZE_VERSION: v0.3.0
    - run:
        name: Wait for db
        command: dockerize -wait tcp://localhost:5432 -timeout 1m
    - run:
        name: Run dev server
        command: npm run dev
        background: true
    - run:
        name: Wait for dev server
        command: dockerize -wait tcp://localhost:5000 -timeout 1m
    - run:
        name: Run tests
        command: npm test
  deploy_staging:
    docker:
      - image: circleci/node:10.16.3
    steps:
    - add_ssh_keys:
        fingerprints:
          - "a5:d5:7f:73:c9:c3:6d:6f:82:5d:3e:1c:c9:d6:a9:9c"
    - checkout
    - run:
        name: Deploy new files
        command: |
          rsync -e -aR project $TESTING_SSH_HOST:/root/auth_api
    - run:
        name: Update Node dependencies on staging
        command: |
          ssh $TESTING_SSH_HOST "cd auth_api/; npm i"
workflows:
  version: 2
  install_and_test:
    jobs:
    - install
    - test:
        requires:
        - install
    - deploy_staging:
        requires:
          - test
        filters:
          branches:
            only: master
